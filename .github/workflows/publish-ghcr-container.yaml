name: Publish multiarch images on ghcr.io
on:
  push:
    tags:
      - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish:
    name: Build and push Spilo multiarch images
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      packages: 'write'
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.7

    - name: Install flake8 and docker-compose
      run: python -m pip install flake8 docker-compose==1.17.1

    - name: Derive spilo image name
      id: image
      working-directory: postgres-appliance
      run: |
        PGVERSION=$(sed -n 's/^ARG PGVERSION=\([1-9][0-9]*\).*$/\1/p' Dockerfile)
        IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-$PGVERSION:${GITHUB_REF/refs\/tags\//}"
        echo "NAME=$IMAGE" >> $GITHUB_OUTPUT

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build arm64 additionaly and push multiarch image to ECR
      uses: docker/build-push-action@v3
      with:
        context: "postgres-appliance/"
        push: true
        tags: "${{ secrets.ECR }}/${{ secrets.ECR_REPOSITORY }}:${{ env.TAG }}"
        platforms: linux/amd64,linux/arm64
